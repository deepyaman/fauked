version: "3.7"
services:
  s3:
    image: minio/minio
    container_name: s3
    volumes:
        - ./buckets:/data:consistent
    expose:
        - "9000"
    ports:
        - "9000:9000"
    environment:
        - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
        - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: minio server /data
    networks:
        - mlflow
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
  db:
    image: mysql
    container_name: db
    command: --innodb_use_native_aio=0
    networks:
        - mlflow
    ports:
      - "3306:3306"
    environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    # volumes:
    #     - ./dbdata:/var/lib/mysql
  mlflow:
    restart: always
    build: .
    image: mlflow_server
    container_name: mlflow_server
    ports:
        - "5000:5000"
    networks:
        - mlflow
    environment:
        - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
        - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
        - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0
    depends_on:
        - db

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
      - '9092:9092'
    networks:
      - kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-create-topics:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    networks:
      - kafka
    hostname: kafka-create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
                       kafka-topics --create --topic test --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
                       sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
networks:
    mlflow: {}
    kafka: {}
